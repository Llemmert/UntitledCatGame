bool inside(int x, int y){
	return(dest.x<=x && x<=dest.x+dest.w&&
			dest.y<=y && y<=dest.y+dest.h);
}

bool collidesWith(Particle *p){
	return (inside(p->dest.x, p->dest.y)) ||
			(inside(p->dest.x+p->dest.w, p->dest.y+dest.h)||
			(inside(p->dest.x+p->dest.w, p->dest.y) ||
			(inside(p->dest.x, p->dest.y+dest.h);
} //in particle class

virtual bool collidesWith(particle *p) {
	return false;
}

virtual void collision(){
	//do something
}

void collide(vector<Particle *> &other){
	if(checkCollisions(others)) collision();

}

bool checkCollisions(vector<Particle *> &others){
	for(auto o:others){
		if (collidesWith(o)) return true;
	}
	return false;
}