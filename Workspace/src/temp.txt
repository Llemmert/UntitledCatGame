	void handleKeyDown()
	{
			if (event.type == SDL_KEYDOWN)
			{
				switch (event.key.keysym.sym)
				{
				case SDLK_LEFT:
					cats[0]->setVelocityX(-100);
					break;
				case SDLK_RIGHT:
					cats[0]->setVelocityX(100);
					break;
				case SDLK_UP
					if(cats[0]->isGrounded()){
						cats[0]->setVelocityY(-300);
						cats[0]->setGrounded(false);
					}
					break;
				case SDLK_a:
					cats[1]->setVelocityX(100);
					break;
				case SDLK_d:
					cats[1]->setVelocityX(-100);
					break;
				case SDLK_s:
					cats[1]->setVelocityY(300)
					break;
				}
			}
			if (event.type == SDL_KEYUP)
			{
				switch (event.key.keysym.sym){}
				{
				case SDLK_LEFT:
					if (cats[0]->getVelocityX() < 0)
					{
						cats[0]->setVelocityX(0);
					}
					break;
				case SDLK_RIGHT:
					if (cats[0]->getVelocityX() > 0)
					{
						cats[0]->setVelocityX(0);
					}
					break;
				case SDLK_a:
					if (cats[1]->getVelocityX() < 0)
					{
						cats[1]->setVelocityX(0);
					}
				case SDLK_d:
					if (cats[1]->getVelocityX() > 0)
					{
						cats[1]->setVelocityX(0);
					}
				}
			}
		}
	}

	void handleKeyUp(SDL_Event aKey) // release key handle
	{
		// cat one left and right (arrow keys)
		if (aKey.key.keysym.sym == SDLK_LEFT)
		{
			if (cats[0]->getVelocityX() < 0)
			{
				cats[0]->setVelocityX(0);
			}
		}
		else if (aKey.key.keysym.sym == SDLK_RIGHT)
		{
			if (cats[0]->getVelocityX() > 0)
			{
				cats[0]->setVelocityX(0);
			}
		}
		else if (aKey.key.keysym.sym == SDLK_UP)
		{
			cats[0]->setVelocityY(0);
		}
		// cat two left and right (a and d keys)
		else if (aKey.key.keysym.sym == SDLK_a)
		{
			if (cats[1]->getVelocityX() < 0)
			{
				cats[1]->setVelocityX(0);
			}
		}
		else if (aKey.key.keysym.sym == SDLK_d)
		{
			if (cats[1]->getVelocityX() > 0)
			{
				cats[1]->setVelocityX(0);
			}
		}
		else if (aKey.key.keysym.sym == SDLK_s)
		{
			cats[1]->setVelocityY(-400);
		}
	}



	void handleKeyDown(SDL_Event aKey) // hold down key handle
	{
		int cat0Ticks = SDL_GetTicks(), cat0NewTicks, cat1Ticks = SDL_GetTicks(), cat1NewTicks;
		// cat one left and right (arrow keys)
		if (aKey.key.keysym.sym == SDLK_LEFT)
		{
			cats[0]->setVelocityX(-100);
			// cats[0]->animateWalk(1);
		}
		else if (aKey.key.keysym.sym == SDLK_RIGHT)
		{
			cats[0]->setVelocityX(100);
			// cats[0]->animateWalk(1);
		}
		// cat two left and right (a and d keys)
		else if (aKey.key.keysym.sym == SDLK_a)
		{
			cats[1]->setVelocityX(-100);
			// cats[1]->animateWalk(1);
		}
		else if (aKey.key.keysym.sym == SDLK_d)
		{
			cats[1]->setVelocityX(100);
			// cats[1]->animateWalk(1);
		}
		else if (aKey.key.keysym.sym == SDLK_UP && cats[0]->isGrounded())
		{
			cats[0]->setVelocityY(-300);
			cats[0]->setGrounded(false);
			// cats[0]->animateWalk(1);
		}
		else if (aKey.key.keysym.sym == SDLK_s)
		{
			cats[1]->setVelocityY(300);
			// cats[1]->animateWalk(1);
		}
	}



if (SDL_PollEvent( &localEvent ) == 1)
{
    if ( localEvent.type == SDL_KEYDOWN )
    {
        if ( currentSplashImage < 3 && currentSplashImage >= 0)
        { 
            currentSplashImage++;
        }
    }
    else if ( localEvent.type == SDL_QUIT )
    {
        smgaEngine.setRunning(false);
    }
}